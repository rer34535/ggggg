import React, { useState } from 'react';
import { Star, Calendar, Sparkles, Bot, Zap } from 'lucide-react';
import OpenAI from 'openai';

const ZodiacCalculator: React.FC = () => {
  const [name, setName] = useState('');
  const [motherName, setMotherName] = useState('');
  const [birthDate, setBirthDate] = useState('');
  const [result, setResult] = useState<any>(null);
  const [isCalculating, setIsCalculating] = useState(false);
  const [apiKey, setApiKey] = useState('');
  const [aiAnalysis, setAiAnalysis] = useState<string>('');
  const [isAnalyzing, setIsAnalyzing] = useState(false);

  const zodiacSigns = {
    'ุงูุญูู': { dates: '21 ูุงุฑุณ - 19 ุฃุจุฑูู', element: 'ุงููุงุฑ', planet: 'ุงููุฑูุฎ', traits: ['ุดุฌุงุน', 'ูุงุฆุฏ', 'ูุชุญูุณ', 'ููุฏูุน'] },
    'ุงูุซูุฑ': { dates: '20 ุฃุจุฑูู - 20 ูุงูู', element: 'ุงูุฃุฑุถ', planet: 'ุงูุฒูุฑุฉ', traits: ['ุตุจูุฑ', 'ุนููู', 'ูุฎูุต', 'ุนููุฏ'] },
    'ุงูุฌูุฒุงุก': { dates: '21 ูุงูู - 20 ููููู', element: 'ุงูููุงุก', planet: 'ุนุทุงุฑุฏ', traits: ['ุฐูู', 'ูุชููู', 'ูุถููู', 'ูุชููุจ'] },
    'ุงูุณุฑุทุงู': { dates: '21 ููููู - 22 ููููู', element: 'ุงููุงุก', planet: 'ุงูููุฑ', traits: ['ุญุณุงุณ', 'ุญููู', 'ุญุฏุณู', 'ูุชููุจ ุงููุฒุงุฌ'] },
    'ุงูุฃุณุฏ': { dates: '23 ููููู - 22 ุฃุบุณุทุณ', element: 'ุงููุงุฑ', planet: 'ุงูุดูุณ', traits: ['ูุฑูู', 'ูุงุซู', 'ูุจุฏุน', 'ูุชูุจุฑ'] },
    'ุงูุนุฐุฑุงุก': { dates: '23 ุฃุบุณุทุณ - 22 ุณุจุชูุจุฑ', element: 'ุงูุฃุฑุถ', planet: 'ุนุทุงุฑุฏ', traits: ['ููุธู', 'ุชุญูููู', 'ูููุฏ', 'ูุงูุฏ'] },
    'ุงูููุฒุงู': { dates: '23 ุณุจุชูุจุฑ - 22 ุฃูุชูุจุฑ', element: 'ุงูููุงุก', planet: 'ุงูุฒูุฑุฉ', traits: ['ูุชูุงุฒู', 'ุฏุจูููุงุณู', 'ุฌููู', 'ูุชุฑุฏุฏ'] },
    'ุงูุนูุฑุจ': { dates: '23 ุฃูุชูุจุฑ - 21 ููููุจุฑ', element: 'ุงููุงุก', planet: 'ุงููุฑูุฎ/ุจููุชู', traits: ['ุนููู', 'ุดุบูู', 'ุบุงูุถ', 'ุงูุชูุงูู'] },
    'ุงูููุณ': { dates: '22 ููููุจุฑ - 21 ุฏูุณูุจุฑ', element: 'ุงููุงุฑ', planet: 'ุงููุดุชุฑู', traits: ['ูุบุงูุฑ', 'ููุณูู', 'ุตุงุฏู', 'ูุชููุฑ'] },
    'ุงูุฌุฏู': { dates: '22 ุฏูุณูุจุฑ - 19 ููุงูุฑ', element: 'ุงูุฃุฑุถ', planet: 'ุฒุญู', traits: ['ุทููุญ', 'ููุถุจุท', 'ูุณุคูู', 'ูุชุดุงุฆู'] },
    'ุงูุฏูู': { dates: '20 ููุงูุฑ - 18 ูุจุฑุงูุฑ', element: 'ุงูููุงุก', planet: 'ุฒุญู/ุฃูุฑุงููุณ', traits: ['ูุจุชูุฑ', 'ูุณุชูู', 'ุฅูุณุงูู', 'ููุนุฒู'] },
    'ุงูุญูุช': { dates: '19 ูุจุฑุงูุฑ - 20 ูุงุฑุณ', element: 'ุงููุงุก', planet: 'ุงููุดุชุฑู/ูุจุชูู', traits: ['ุญุงูู', 'ุฑุญูู', 'ููู', 'ูุงุฑุจ ูู ุงููุงูุน'] }
  };

  const spiritualZodiacs = [
    'ุงูุทุงุฆุฑ ุงูุฃุฒุฑู', 'ุงูุฐุฆุจ ุงููุถู', 'ุงูุชููู ุงูุฐูุจู', 'ุงููุฑุงุดุฉ ุงูุจููุณุฌูุฉ', 'ุงูุฃุณุฏ ุงูุฃุจูุถ',
    'ุงููุณุฑ ุงูุฃุญูุฑ', 'ุงูุญูุช ุงููุฑูุณุชุงูู', 'ุงูุซุนุจุงู ุงูุฒูุฑุฏู', 'ุงูุบุฒุงู ุงููุฑุฏู', 'ุงูุนููุงุก ุงูููุฏุณุฉ',
    'ุงูุฏุจ ุงููุทุจู', 'ุงูููู ุงูุญููู', 'ุงููุท ุงูุฃุณูุฏ', 'ุงูุญุตุงู ุงููุฌูุญ', 'ุงูุณูุญูุงุฉ ุงูุฐูุจูุฉ'
  ];

  const akashicGates = [
    'ุจูุงุจุฉ ุงูููุฑ ุงูุฃุฒุฑู', 'ุจูุงุจุฉ ุงูุญููุฉ ุงูุฐูุจูุฉ', 'ุจูุงุจุฉ ุงูุญุจ ุงููุฑุฏู', 'ุจูุงุจุฉ ุงูููุฉ ุงูุญูุฑุงุก',
    'ุจูุงุจุฉ ุงูุณูุงู ุงูุฃุฎุถุฑ', 'ุจูุงุจุฉ ุงูุญุฏุณ ุงูุจููุณุฌู', 'ุจูุงุจุฉ ุงูุชุญูู ุงููุถู', 'ุจูุงุจุฉ ุงูุดูุงุก ุงููุฑูุณุชุงูู'
  ];

  const calculateZodiac = async () => {
    if (!name || !motherName || !birthDate) return;
    
    setIsCalculating(true);
    
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    const date = new Date(birthDate);
    const month = date.getMonth() + 1;
    const day = date.getDate();
    
    let zodiacSign = '';
    
    if ((month === 3 && day >= 21) || (month === 4 && day <= 19)) zodiacSign = 'ุงูุญูู';
    else if ((month === 4 && day >= 20) || (month === 5 && day <= 20)) zodiacSign = 'ุงูุซูุฑ';
    else if ((month === 5 && day >= 21) || (month === 6 && day <= 20)) zodiacSign = 'ุงูุฌูุฒุงุก';
    else if ((month === 6 && day >= 21) || (month === 7 && day <= 22)) zodiacSign = 'ุงูุณุฑุทุงู';
    else if ((month === 7 && day >= 23) || (month === 8 && day <= 22)) zodiacSign = 'ุงูุฃุณุฏ';
    else if ((month === 8 && day >= 23) || (month === 9 && day <= 22)) zodiacSign = 'ุงูุนุฐุฑุงุก';
    else if ((month === 9 && day >= 23) || (month === 10 && day <= 22)) zodiacSign = 'ุงูููุฒุงู';
    else if ((month === 10 && day >= 23) || (month === 11 && day <= 21)) zodiacSign = 'ุงูุนูุฑุจ';
    else if ((month === 11 && day >= 22) || (month === 12 && day <= 21)) zodiacSign = 'ุงูููุณ';
    else if ((month === 12 && day >= 22) || (month === 1 && day <= 19)) zodiacSign = 'ุงูุฌุฏู';
    else if ((month === 1 && day >= 20) || (month === 2 && day <= 18)) zodiacSign = 'ุงูุฏูู';
    else zodiacSign = 'ุงูุญูุช';
    
    const zodiacInfo = zodiacSigns[zodiacSign as keyof typeof zodiacSigns];
    
    // ุญุณุงุจ ุงูุจุฑุฌ ุงูุฑูุญุงูู ุจูุงุกู ุนูู ุงูุงุณู ูุงุณู ุงูุฃู
    const nameValue = (name + motherName).length;
    const spiritualZodiac = spiritualZodiacs[nameValue % spiritualZodiacs.length];
    const akashicGate = akashicGates[(nameValue + day) % akashicGates.length];
    
    setResult({
      name,
      motherName,
      zodiacSign,
      spiritualZodiac,
      akashicGate,
      ...zodiacInfo,
      spiritualNumber: Math.floor(Math.random() * 9) + 1,
      luckyColor: ['ุฃุญูุฑ', 'ุฃุฒุฑู', 'ุฃุฎุถุฑ', 'ุฃุตูุฑ', 'ุจููุณุฌู', 'ุจุฑุชูุงูู'][Math.floor(Math.random() * 6)],
      cosmicVibration: ['ุนุงููุฉ', 'ูุชูุณุทุฉ', 'ููุฎูุถุฉ'][Math.floor(Math.random() * 3)],
      prediction: 'ุชูุชุธุฑู ูุชุฑุฉ ูู ุงูุชุญููุงุช ุงูุฅูุฌุงุจูุฉ ูุงูููู ุงูุฑูุญู. ุงูููุงูุจ ุชุดูุฑ ุฅูู ูุฑุต ุฌุฏูุฏุฉ ูู ุงูุฃููุ ูุจูุงุจุชู ุงูุทุงููุฉ ุชูุชุญ ุฃูุงู ุฐุจุฐุจุงุช ุนุงููุฉ ูู ุงูุญููุฉ ูุงูููุฑ.'
    });
    
    setIsCalculating(false);
  };

  const getAIAnalysis = async (calculationResult: any) => {
    if (!apiKey.trim()) return;
    
    setIsAnalyzing(true);
    
    try {
      const openai = new OpenAI({
        baseURL: "https://openrouter.ai/api/v1",
        apiKey: apiKey,
        defaultHeaders: {
          "HTTP-Referer": window.location.origin,
          "X-Title": "Al-Araf - Zodiac Calculator",
        },
        dangerouslyAllowBrowser: true
      });

      const prompt = `ุฃูุช ุฎุจูุฑ ูู ุนูู ุงูููุฆุฉ ูุงูุฃุจุฑุงุฌ ุงูุฑูุญุงููุฉ. ูู ุจุชุญููู ูุฐุง ุงูููู ุงููููู:

ุงูุงุณู: ${calculationResult.name}
ุงุณู ุงููุงูุฏุฉ: ${calculationResult.motherName}
ุงูุจุฑุฌ ุงููููู: ${calculationResult.zodiacSign}
ุงูุจุฑุฌ ุงูุฑูุญุงูู: ${calculationResult.spiritualZodiac}
ุงูุจูุงุจุฉ ุงูุฃูุงุดูุฉ: ${calculationResult.akashicGate}
ุงูุนูุตุฑ: ${calculationResult.element}
ุงููููุจ ุงูุญุงูู: ${calculationResult.planet}
ุงูุฑูู ุงูุฑูุญุงูู: ${calculationResult.spiritualNumber}

ูุฏู ุชุญูููุงู ููููุงู ูุฑูุญุงููุงู ุดุงููุงู ูุดูู:
1. ุชูุณูุฑ ููุตู ููุจุฑุฌ ุงููููู ูุงูุฑูุญุงูู
2. ุชุฃุซูุฑ ุงูุจูุงุจุฉ ุงูุฃูุงุดูุฉ ุนูู ุงูุดุฎุตูุฉ
3. ุงูุชูุงูู ูุน ุงูุฃุจุฑุงุฌ ุงูุฃุฎุฑู
4. ุงูุชููุนุงุช ูุงูุชูุฌููุงุช ูููุณุชูุจู
5. ุงูุฃููุงุช ุงูููุงุณุจุฉ ูููุฑุงุฑุงุช ุงููููุฉ
6. ุงูุฃููุงู ูุงูุฃุญุฌุงุฑ ุงูููุงุณุจุฉ
7. ุงููุตุงุฆุญ ุงูุฑูุญุงููุฉ ูุงูุนูููุฉ

ุงุณุชุฎุฏู ูุบุฉ ููููุฉ ุนูููุฉ ููููููุฉ.`;

      const completion = await openai.chat.completions.create({
        model: 'deepseek/deepseek-chat-v3-0324:free',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 2000
      });

      setAiAnalysis(completion.choices[0].message.content || 'ูู ุฃุชููู ูู ุงูุญุตูู ุนูู ุชุญููู.');
    } catch (error) {
      console.error('Error:', error);
      setAiAnalysis('ุญุฏุซ ุฎุทุฃ ูู ุงูุญุตูู ุนูู ุงูุชุญููู ุงูุฐูู. ุชุฃูุฏ ูู ุตุญุฉ ููุชุงุญ API.');
    } finally {
      setIsAnalyzing(false);
    }
  };

  return (
    <div className="min-h-screen pt-20 pb-12 px-6">
      <div className="container mx-auto max-w-4xl">
        <div className="text-center mb-12">
          <h2 className="text-5xl font-bold mb-6 bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 bg-clip-text text-transparent">
            <Star className="inline-block w-12 h-12 ml-4" />
            ๐ฎ ุงูุจุฑุฌ ุงูุฑูุญุงูู (ุงูุจุงุทูู)
          </h2>
          <div className="bg-gradient-to-r from-purple-900/50 to-pink-900/50 backdrop-blur-lg rounded-2xl p-6 border border-purple-500/30 mb-8">
            <p className="text-lg text-gray-300 leading-relaxed">
              ุงูุชุจ ุงุณูู ุงููุงูู ูุงุณู ูุงูุฏุชู ูุชุงุฑูุฎ ูููุงุฏู ุจุงููููุงุฏูุ ูุณููุดู ูู ุจุฑุฌู ุงูุฑูุญุงูู (ุงูุจุงุทูู) ุงูุญูููู ูู ุฎูุงู ุฃุณุฑุงุฑ ุนูู ุงูููุฆุฉุ ูุฐุจุฐุจุงุช ุงูุฑูุญ ุงููุฑุชุจุทุฉ ุจุงูุณุฌู ุงูุฃูุงุดู.
            </p>
            <p className="text-cyan-300 mt-3 font-medium">
              ๐ ุงุณุชุนุฏ ููุดู ุงูุทูู ุงูุฎูู ููููุชู ุงูููููุฉุ ููุนุฑูุฉ ุงูุจูุงุจุฉ ุงูุทุงููุฉ ุงูุชู ูููุฏุช ูููุง.
            </p>
          </div>
        </div>

        {/* AI Analysis Section */}
        <div className="bg-white/10 backdrop-blur-lg rounded-3xl p-8 border border-white/20 mb-8">
          <h3 className="text-2xl font-bold mb-6 text-cyan-300 flex items-center gap-3">
            <Bot className="w-6 h-6" />
            ุงูุชุญููู ุงููููู ุงูุฐูู
          </h3>
          
          <div className="mb-6">
            <label className="block text-lg font-medium mb-3 text-cyan-300">
              ููุชุงุญ OpenRouter API (ุงุฎุชูุงุฑู ููุชุญููู ุงูุฐูู)
            </label>
            <input
              type="password"
              value={apiKey}
              onChange={(e) => setApiKey(e.target.value)}
              className="w-full px-4 py-3 rounded-xl bg-white/10 border border-white/30 text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-transparent"
              placeholder="ุฃุฏุฎู ููุชุงุญ API ููุญุตูู ุนูู ุชุญููู ูููู ุฐูู ููุตู"
            />
          </div>
        </div>

        <div className="bg-white/10 backdrop-blur-lg rounded-3xl p-8 border border-white/20 mb-8">
          <div className="grid md:grid-cols-2 gap-6 mb-8">
            <div>
              <label className="block text-lg font-medium mb-3 text-cyan-300">
                <Calendar className="inline-block w-5 h-5 ml-2" />
                ุงูุงุณู ุงููุงูู
              </label>
              <input
                type="text"
                value={name}
                onChange={(e) => setName(e.target.value)}
                className="w-full px-4 py-3 rounded-xl bg-white/10 border border-white/30 text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-transparent"
                placeholder="ุฃุฏุฎู ุงุณูู ุงููุงูู"
              />
            </div>
            
            <div>
              <label className="block text-lg font-medium mb-3 text-cyan-300">
                <Calendar className="inline-block w-5 h-5 ml-2" />
                ุงุณู ุงููุงูุฏุฉ
              </label>
              <input
                type="text"
                value={motherName}
                onChange={(e) => setMotherName(e.target.value)}
                className="w-full px-4 py-3 rounded-xl bg-white/10 border border-white/30 text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-transparent"
                placeholder="ุฃุฏุฎู ุงุณู ูุงูุฏุชู"
              />
            </div>
            
            <div className="md:col-span-2">
              <label className="block text-lg font-medium mb-3 text-cyan-300">
                <Calendar className="inline-block w-5 h-5 ml-2" />
                ุชุงุฑูุฎ ุงููููุงุฏ (ุจุงููููุงุฏู)
              </label>
              <input
                type="date"
                value={birthDate}
                onChange={(e) => setBirthDate(e.target.value)}
                className="w-full px-4 py-3 rounded-xl bg-white/10 border border-white/30 text-white focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-transparent"
              />
            </div>
          </div>

          <button
            onClick={calculateZodiac}
            disabled={isCalculating || !name || !motherName || !birthDate}
            className="w-full bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-600 hover:to-pink-700 text-white font-bold py-4 px-8 rounded-xl text-lg transition-all duration-300 transform hover:scale-105 hover:shadow-2xl hover:shadow-purple-500/40 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
          >
            <div className="flex items-center justify-center gap-3">
              <Sparkles className={`w-6 h-6 ${isCalculating ? 'animate-spin' : ''}`} />
              {isCalculating ? 'ุฌุงุฑู ูุดู ุงูุฃุณุฑุงุฑ ุงูููููุฉ...' : 'ุงูุดู ุจุฑุฌู ุงูุฑูุญุงูู'}
            </div>
          </button>
        </div>

        {result && (
          <div className="bg-gradient-to-br from-purple-900/50 to-pink-900/50 backdrop-blur-lg rounded-3xl p-8 border border-purple-500/30 animate-fadeIn">
            <h3 className="text-3xl font-bold text-center mb-8 text-purple-300">
              ุงููุดู ุงูุฑูุญุงูู ูู {result.name}
            </h3>
            
            <div className="grid md:grid-cols-2 gap-8">
              <div className="space-y-6">
                <div className="bg-white/10 rounded-2xl p-6">
                  <h4 className="text-xl font-bold mb-3 text-cyan-300">ุงูุจุฑุฌ ุงููููู</h4>
                  <p className="text-2xl font-bold text-yellow-400">{result.zodiacSign}</p>
                  <p className="text-gray-300 mt-2">{result.dates}</p>
                </div>
                
                <div className="bg-gradient-to-r from-purple-600/30 to-pink-600/30 rounded-2xl p-6 border border-purple-400/30">
                  <h4 className="text-xl font-bold mb-3 text-cyan-300">๐ฎ ุงูุจุฑุฌ ุงูุฑูุญุงูู (ุงูุจุงุทูู)</h4>
                  <p className="text-2xl font-bold text-purple-300">{result.spiritualZodiac}</p>
                </div>
                
                <div className="bg-gradient-to-r from-cyan-600/30 to-blue-600/30 rounded-2xl p-6 border border-cyan-400/30">
                  <h4 className="text-xl font-bold mb-3 text-cyan-300">๐ ุงูุจูุงุจุฉ ุงูุฃูุงุดูุฉ</h4>
                  <p className="text-xl text-cyan-300">{result.akashicGate}</p>
                </div>
                
                <div className="bg-white/10 rounded-2xl p-6">
                  <h4 className="text-xl font-bold mb-3 text-cyan-300">ุงูุนูุตุฑ ุงูุญุงูู</h4>
                  <p className="text-xl text-orange-400">{result.element}</p>
                </div>
              </div>
              
              <div className="space-y-6">
                <div className="bg-white/10 rounded-2xl p-6">
                  <h4 className="text-xl font-bold mb-3 text-cyan-300">ุงููููุจ ุงูุญุงูู</h4>
                  <p className="text-xl text-green-400">{result.planet}</p>
                </div>
                
                <div className="bg-white/10 rounded-2xl p-6">
                  <h4 className="text-xl font-bold mb-3 text-cyan-300">ุงูุฐุจุฐุจุฉ ุงูููููุฉ</h4>
                  <p className="text-xl text-yellow-400">{result.cosmicVibration}</p>
                </div>
                
                <div className="bg-white/10 rounded-2xl p-6">
                  <h4 className="text-xl font-bold mb-3 text-cyan-300">ุงูุตูุงุช ุงูุดุฎุตูุฉ</h4>
                  <div className="flex flex-wrap gap-2">
                    {result.traits.map((trait: string, index: number) => (
                      <span key={index} className="bg-purple-500/30 px-3 py-1 rounded-full text-sm">
                        {trait}
                      </span>
                    ))}
                  </div>
                </div>
                
                <div className="bg-white/10 rounded-2xl p-6">
                  <h4 className="text-xl font-bold mb-3 text-cyan-300">ุงูุฑูู ุงูุฑูุญุงูู</h4>
                  <p className="text-3xl font-bold text-yellow-400">{result.spiritualNumber}</p>
                </div>
                
                <div className="bg-white/10 rounded-2xl p-6">
                  <h4 className="text-xl font-bold mb-3 text-cyan-300">ุงูููู ุงููุญุธูุธ</h4>
                  <p className="text-xl text-pink-400">{result.luckyColor}</p>
                </div>
              </div>
            </div>
            
            <div className="mt-8 bg-gradient-to-r from-cyan-900/50 to-purple-900/50 rounded-2xl p-6 border border-cyan-500/30">
              <h4 className="text-xl font-bold mb-3 text-cyan-300">ุงููุดู ุงูุฑูุญุงูู ูุงูุชููุนุงุช</h4>
              <p className="text-gray-300 leading-relaxed">{result.prediction}</p>
            </div>
            
            {/* AI Analysis Button and Results */}
            {apiKey.trim() && (
              <div className="mt-8">
                <button
                  onClick={() => getAIAnalysis(result)}
                  disabled={isAnalyzing}
                  className="w-full bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-600 hover:to-pink-700 text-white font-bold py-4 px-8 rounded-xl text-lg transition-all duration-300 transform hover:scale-105 hover:shadow-2xl hover:shadow-purple-500/40 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none mb-6"
                >
                  <div className="flex items-center justify-center gap-3">
                    <Zap className={`w-6 h-6 ${isAnalyzing ? 'animate-spin' : ''}`} />
                    {isAnalyzing ? 'ุฌุงุฑู ุงูุชุญููู ุงููููู ุงูุฐูู...' : 'ุงุญุตู ุนูู ุงูุชุญููู ุงููููู ุงูุฐูู'}
                  </div>
                </button>
                
                {aiAnalysis && (
                  <div className="bg-gradient-to-r from-purple-900/50 to-indigo-900/50 rounded-2xl p-6 border border-purple-500/30">
                    <h4 className="text-xl font-bold mb-4 text-purple-300 flex items-center gap-2">
                      <Bot className="w-5 h-5" />
                      ุงูุชุญููู ุงููููู ุงูุฐูู ุงููุชูุฏู
                    </h4>
                    <div className="text-gray-300 leading-relaxed whitespace-pre-wrap">
                      {aiAnalysis}
                    </div>
                  </div>
                )}
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
};

export default ZodiacCalculator;